// flow-typed signature: da74b5c039fc5d7d3a27e55f54a7d0b8
// flow-typed version: <<STUB>>/pg-promise_v^10.3.1/flow_v0.114.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'pg-promise'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'pg-promise' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'pg-promise/lib/connect' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/context' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/database-pool' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/database' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/parameterized-query-error' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/prepared-statement-error' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/query-file-error' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/errors/query-result-error' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/events' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/formatting' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/column-set' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/column' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/concat' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/insert' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/sets' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/update' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/methods/values' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/helpers/table-name' {
  declare module.exports: any;
}

declare module 'pg-promise/lib' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/inner-state' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/main' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/patterns' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/promise-adapter' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/promise-parser' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/query-file' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/query-result' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/query' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/special-query' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/stream' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/task' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/text' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/tx-mode' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types/parameterized-query' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types/prepared-statement' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/types/server-formatting' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/utils' {
  declare module.exports: any;
}

declare module 'pg-promise/lib/utils/public' {
  declare module.exports: any;
}

// Filename aliases
declare module 'pg-promise/lib/connect.js' {
  declare module.exports: $Exports<'pg-promise/lib/connect'>;
}
declare module 'pg-promise/lib/context.js' {
  declare module.exports: $Exports<'pg-promise/lib/context'>;
}
declare module 'pg-promise/lib/database-pool.js' {
  declare module.exports: $Exports<'pg-promise/lib/database-pool'>;
}
declare module 'pg-promise/lib/database.js' {
  declare module.exports: $Exports<'pg-promise/lib/database'>;
}
declare module 'pg-promise/lib/errors/index' {
  declare module.exports: $Exports<'pg-promise/lib/errors'>;
}
declare module 'pg-promise/lib/errors/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors'>;
}
declare module 'pg-promise/lib/errors/parameterized-query-error.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/parameterized-query-error'>;
}
declare module 'pg-promise/lib/errors/prepared-statement-error.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/prepared-statement-error'>;
}
declare module 'pg-promise/lib/errors/query-file-error.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/query-file-error'>;
}
declare module 'pg-promise/lib/errors/query-result-error.js' {
  declare module.exports: $Exports<'pg-promise/lib/errors/query-result-error'>;
}
declare module 'pg-promise/lib/events.js' {
  declare module.exports: $Exports<'pg-promise/lib/events'>;
}
declare module 'pg-promise/lib/formatting.js' {
  declare module.exports: $Exports<'pg-promise/lib/formatting'>;
}
declare module 'pg-promise/lib/helpers/column-set.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/column-set'>;
}
declare module 'pg-promise/lib/helpers/column.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/column'>;
}
declare module 'pg-promise/lib/helpers/index' {
  declare module.exports: $Exports<'pg-promise/lib/helpers'>;
}
declare module 'pg-promise/lib/helpers/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers'>;
}
declare module 'pg-promise/lib/helpers/methods/concat.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/concat'>;
}
declare module 'pg-promise/lib/helpers/methods/index' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods'>;
}
declare module 'pg-promise/lib/helpers/methods/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods'>;
}
declare module 'pg-promise/lib/helpers/methods/insert.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/insert'>;
}
declare module 'pg-promise/lib/helpers/methods/sets.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/sets'>;
}
declare module 'pg-promise/lib/helpers/methods/update.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/update'>;
}
declare module 'pg-promise/lib/helpers/methods/values.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/methods/values'>;
}
declare module 'pg-promise/lib/helpers/table-name.js' {
  declare module.exports: $Exports<'pg-promise/lib/helpers/table-name'>;
}
declare module 'pg-promise/lib/index' {
  declare module.exports: $Exports<'pg-promise/lib'>;
}
declare module 'pg-promise/lib/index.js' {
  declare module.exports: $Exports<'pg-promise/lib'>;
}
declare module 'pg-promise/lib/inner-state.js' {
  declare module.exports: $Exports<'pg-promise/lib/inner-state'>;
}
declare module 'pg-promise/lib/main.js' {
  declare module.exports: $Exports<'pg-promise/lib/main'>;
}
declare module 'pg-promise/lib/patterns.js' {
  declare module.exports: $Exports<'pg-promise/lib/patterns'>;
}
declare module 'pg-promise/lib/promise-adapter.js' {
  declare module.exports: $Exports<'pg-promise/lib/promise-adapter'>;
}
declare module 'pg-promise/lib/promise-parser.js' {
  declare module.exports: $Exports<'pg-promise/lib/promise-parser'>;
}
declare module 'pg-promise/lib/query-file.js' {
  declare module.exports: $Exports<'pg-promise/lib/query-file'>;
}
declare module 'pg-promise/lib/query-result.js' {
  declare module.exports: $Exports<'pg-promise/lib/query-result'>;
}
declare module 'pg-promise/lib/query.js' {
  declare module.exports: $Exports<'pg-promise/lib/query'>;
}
declare module 'pg-promise/lib/special-query.js' {
  declare module.exports: $Exports<'pg-promise/lib/special-query'>;
}
declare module 'pg-promise/lib/stream.js' {
  declare module.exports: $Exports<'pg-promise/lib/stream'>;
}
declare module 'pg-promise/lib/task.js' {
  declare module.exports: $Exports<'pg-promise/lib/task'>;
}
declare module 'pg-promise/lib/text.js' {
  declare module.exports: $Exports<'pg-promise/lib/text'>;
}
declare module 'pg-promise/lib/tx-mode.js' {
  declare module.exports: $Exports<'pg-promise/lib/tx-mode'>;
}
declare module 'pg-promise/lib/types/index' {
  declare module.exports: $Exports<'pg-promise/lib/types'>;
}
declare module 'pg-promise/lib/types/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/types'>;
}
declare module 'pg-promise/lib/types/parameterized-query.js' {
  declare module.exports: $Exports<'pg-promise/lib/types/parameterized-query'>;
}
declare module 'pg-promise/lib/types/prepared-statement.js' {
  declare module.exports: $Exports<'pg-promise/lib/types/prepared-statement'>;
}
declare module 'pg-promise/lib/types/server-formatting.js' {
  declare module.exports: $Exports<'pg-promise/lib/types/server-formatting'>;
}
declare module 'pg-promise/lib/utils/index' {
  declare module.exports: $Exports<'pg-promise/lib/utils'>;
}
declare module 'pg-promise/lib/utils/index.js' {
  declare module.exports: $Exports<'pg-promise/lib/utils'>;
}
declare module 'pg-promise/lib/utils/public.js' {
  declare module.exports: $Exports<'pg-promise/lib/utils/public'>;
}
