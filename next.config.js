/**
* !!! DO NOT EDIT THIS FILE DIRECTLY !!!
* ! This file has been generated automatically. See the config/*.js version of
* ! this file to make permanent modifications!
*/

"use strict";

require("source-map-support/register");

var _nextBundleAnalyzer = _interopRequireDefault(require("@zeit/next-bundle-analyzer"));

var _devUtils = require("./src/dev-utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _devUtils.populateEnv)();
const {
  BUNDLE_ANALYZE
} = process.env;
const paths = {
  universe: `${__dirname}/src/`
};

module.exports = () => {
  return (0, _nextBundleAnalyzer.default)({
    distDir: 'build',
    analyzeServer: ['server', 'both'].includes(BUNDLE_ANALYZE),
    analyzeBrowser: ['browser', 'both'].includes(BUNDLE_ANALYZE),
    bundleAnalyzerConfig: {
      server: {
        analyzerMode: 'static',
        reportFilename: 'bundle-analysis-server.html'
      },
      browser: {
        analyzerMode: 'static',
        reportFilename: 'bundle-analysis-client.html'
      }
    },
    webpack: config => {
      config.resolve.alias = Object.assign({}, config.resolve.alias, {
        universe: paths.universe
      });
      return config;
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9uZXh0LmNvbmZpZy5qcyJdLCJuYW1lcyI6WyJCVU5ETEVfQU5BTFlaRSIsInByb2Nlc3MiLCJlbnYiLCJwYXRocyIsInVuaXZlcnNlIiwiX19kaXJuYW1lIiwibW9kdWxlIiwiZXhwb3J0cyIsImRpc3REaXIiLCJhbmFseXplU2VydmVyIiwiaW5jbHVkZXMiLCJhbmFseXplQnJvd3NlciIsImJ1bmRsZUFuYWx5emVyQ29uZmlnIiwic2VydmVyIiwiYW5hbHl6ZXJNb2RlIiwicmVwb3J0RmlsZW5hbWUiLCJicm93c2VyIiwid2VicGFjayIsImNvbmZpZyIsInJlc29sdmUiLCJhbGlhcyIsIk9iamVjdCIsImFzc2lnbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUVBOztBQUNBOzs7O0FBRUE7QUFFQSxNQUFNO0FBQ0ZBLEVBQUFBO0FBREUsSUFFRkMsT0FBTyxDQUFDQyxHQUZaO0FBSUEsTUFBTUMsS0FBSyxHQUFHO0FBQ1ZDLEVBQUFBLFFBQVEsRUFBRyxHQUFFQyxTQUFVO0FBRGIsQ0FBZDs7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLE1BQW9EO0FBQ2pFLFNBQU8saUNBQW1CO0FBRXRCQyxJQUFBQSxPQUFPLEVBQUUsT0FGYTtBQUt0QkMsSUFBQUEsYUFBYSxFQUFFLENBQUMsUUFBRCxFQUFXLE1BQVgsRUFBbUJDLFFBQW5CLENBQTRCVixjQUE1QixDQUxPO0FBTXRCVyxJQUFBQSxjQUFjLEVBQUUsQ0FBQyxTQUFELEVBQVksTUFBWixFQUFvQkQsUUFBcEIsQ0FBNkJWLGNBQTdCLENBTk07QUFPdEJZLElBQUFBLG9CQUFvQixFQUFFO0FBQ2xCQyxNQUFBQSxNQUFNLEVBQUU7QUFDSkMsUUFBQUEsWUFBWSxFQUFFLFFBRFY7QUFFSkMsUUFBQUEsY0FBYyxFQUFFO0FBRlosT0FEVTtBQUtsQkMsTUFBQUEsT0FBTyxFQUFFO0FBQ0xGLFFBQUFBLFlBQVksRUFBRSxRQURUO0FBRUxDLFFBQUFBLGNBQWMsRUFBRTtBQUZYO0FBTFMsS0FQQTtBQXFCdEJFLElBQUFBLE9BQU8sRUFBR0MsTUFBRCxJQUFvQjtBQUl6QkEsTUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVDLEtBQWYsR0FBdUJDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JKLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxLQUFqQyxFQUF3QztBQUMzRGhCLFFBQUFBLFFBQVEsRUFBRUQsS0FBSyxDQUFDQztBQUQyQyxPQUF4QyxDQUF2QjtBQUlBLGFBQU9jLE1BQVA7QUFDSDtBQTlCcUIsR0FBbkIsQ0FBUDtBQWdDSCxDQWpDRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5cbmltcG9ydCB3aXRoQnVuZGxlQW5hbHl6ZXIgZnJvbSAnQHplaXQvbmV4dC1idW5kbGUtYW5hbHl6ZXInXG5pbXBvcnQgeyBwb3B1bGF0ZUVudiB9IGZyb20gJy4vc3JjL2Rldi11dGlscydcblxucG9wdWxhdGVFbnYoKTtcblxuY29uc3Qge1xuICAgIEJVTkRMRV9BTkFMWVpFXG59ID0gcHJvY2Vzcy5lbnY7XG5cbmNvbnN0IHBhdGhzID0ge1xuICAgIHVuaXZlcnNlOiBgJHtfX2Rpcm5hbWV9L3NyYy9gXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9ICgvKiBwaGFzZTogc3RyaW5nLCB7IGRlZmF1bHRDb25maWcgfTogT2JqZWN0ICovKSA9PiB7XG4gICAgcmV0dXJuIHdpdGhCdW5kbGVBbmFseXplcih7XG4gICAgICAgIC8vID8gUmVuYW1lcyB0aGUgYnVpbGQgZGlyIFwiYnVpbGRcIiBpbnN0ZWFkIG9mIFwiLm5leHRcIlxuICAgICAgICBkaXN0RGlyOiAnYnVpbGQnLFxuXG4gICAgICAgIC8vID8gU2VsZWN0aXZlbHkgZW5hYmxlcyBidW5kbGUgYW5hbHlzaXMuIFNlZSBkaXN0LmVudiBvciBSRUFETUUgZm9yIGRldGFpbHNcbiAgICAgICAgYW5hbHl6ZVNlcnZlcjogWydzZXJ2ZXInLCAnYm90aCddLmluY2x1ZGVzKEJVTkRMRV9BTkFMWVpFKSxcbiAgICAgICAgYW5hbHl6ZUJyb3dzZXI6IFsnYnJvd3NlcicsICdib3RoJ10uaW5jbHVkZXMoQlVORExFX0FOQUxZWkUpLFxuICAgICAgICBidW5kbGVBbmFseXplckNvbmZpZzoge1xuICAgICAgICAgICAgc2VydmVyOiB7XG4gICAgICAgICAgICAgICAgYW5hbHl6ZXJNb2RlOiAnc3RhdGljJyxcbiAgICAgICAgICAgICAgICByZXBvcnRGaWxlbmFtZTogJ2J1bmRsZS1hbmFseXNpcy1zZXJ2ZXIuaHRtbCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBicm93c2VyOiB7XG4gICAgICAgICAgICAgICAgYW5hbHl6ZXJNb2RlOiAnc3RhdGljJyxcbiAgICAgICAgICAgICAgICByZXBvcnRGaWxlbmFtZTogJ2J1bmRsZS1hbmFseXNpcy1jbGllbnQuaHRtbCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvLyA/IFdlYnBhY2sgY29uZmlndXJhdGlvblxuICAgICAgICAvLyAhIE5vdGUgdGhhdCB0aGUgd2VicGFjayBjb25maWd1cmF0aW9uIGlzIGV4ZWN1dGVkIHR3aWNlOiBvbmNlXG4gICAgICAgIC8vICEgc2VydmVyLXNpZGUgYW5kIG9uY2UgY2xpZW50LXNpZGUhXG4gICAgICAgIHdlYnBhY2s6IChjb25maWc6IE9iamVjdCkgPT4ge1xuICAgICAgICAgICAgLy8gPyBUaGVzZSBhcmUgYWxpYXNlcyB0aGF0IGNhbiBiZSB1c2VkIGR1cmluZyBKUyBpbXBvcnQgY2FsbHNcbiAgICAgICAgICAgIC8vICEgTm90ZSB0aGF0IHlvdSBtdXN0IGFsc28gY2hhbmdlIHRoZXNlIHNhbWUgYWxpYXNlcyBpbiAuZmxvd2NvbmZpZ1xuICAgICAgICAgICAgLy8gISBOb3RlIHRoYXQgeW91IG11c3QgYWxzbyBjaGFuZ2UgdGhlc2Ugc2FtZSBhbGlhc2VzIGluIHBhY2thZ2UuanNvbiAoamVzdClcbiAgICAgICAgICAgIGNvbmZpZy5yZXNvbHZlLmFsaWFzID0gT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnLnJlc29sdmUuYWxpYXMsIHtcbiAgICAgICAgICAgICAgICB1bml2ZXJzZTogcGF0aHMudW5pdmVyc2VcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuIl19