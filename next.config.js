"use strict";

var _bundleAnalyzer = _interopRequireDefault(require("@next/bundle-analyzer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('./src/dev-utils').populateEnv();

const paths = {
  universe: `${__dirname}/src/`,
  multiverse: `${__dirname}/lib/`
};

module.exports = () => {
  return (0, _bundleAnalyzer.default)({
    enabled: process.env.ANALYZE === 'true'
  })({
    distDir: 'build',
    webpack: config => {
      config.resolve && (config.resolve.alias = { ...config.resolve.alias,
        universe: paths.universe,
        multiverse: paths.multiverse
      });
      return config;
    },
    env: {
      FLIGHTS_GENERATE_DAYS: process.env.FLIGHTS_GENERATE_DAYS,
      AIRPORT_NUM_OF_GATE_LETTERS: process.env.AIRPORT_NUM_OF_GATE_LETTERS,
      AIRPORT_GATE_NUMBERS_PER_LETTER: process.env.AIRPORT_GATE_NUMBERS_PER_LETTER,
      RESULTS_PER_PAGE: process.env.RESULTS_PER_PAGE,
      IGNORE_RATE_LIMITS: process.env.IGNORE_RATE_LIMITS,
      LOCKOUT_ALL_KEYS: process.env.LOCKOUT_ALL_KEYS,
      DISALLOWED_METHODS: process.env.DISALLOWED_METHODS,
      REQUESTS_PER_CONTRIVED_ERROR: process.env.REQUESTS_PER_CONTRIVED_ERROR,
      MAX_CONTENT_LENGTH_BYTES: process.env.MAX_CONTENT_LENGTH_BYTES
    },

    async rewrites() {
      return [{
        source: '/v1/flights/all',
        destination: '/api/v1/flights/all'
      }, {
        source: '/v1/flights/search',
        destination: '/api/v1/flights/search'
      }, {
        source: '/v1/flights/with-ids',
        destination: '/api/v1/flights/with-ids'
      }, {
        source: '/v1/info/airlines',
        destination: '/api/v1/info/airlines'
      }, {
        source: '/v1/info/airports',
        destination: '/api/v1/info/airports'
      }, {
        source: '/v1/info/no-fly-list',
        destination: '/api/v1/info/no-fly-list'
      }, {
        source: '/v2/flights',
        destination: '/api/v2/flights'
      }, {
        source: '/v2/info/airlines',
        destination: '/api/v2/info/airlines'
      }, {
        source: '/v2/info/airports',
        destination: '/api/v2/info/airports'
      }, {
        source: '/v2/info/all-extras',
        destination: '/api/v2/info/all-extras'
      }, {
        source: '/v2/info/no-fly-list',
        destination: '/api/v2/info/no-fly-list'
      }, {
        source: '/v2/info/seat-classes',
        destination: '/api/v2/info/seat-classes'
      }];
    }

  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,