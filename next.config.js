"use strict";

var _bundleAnalyzer = _interopRequireDefault(require("@next/bundle-analyzer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('./src/dev-utils').populateEnv();

const paths = {
  universe: `${__dirname}/src/`,
  multiverse: `${__dirname}/lib/`
};

module.exports = () => {
  return (0, _bundleAnalyzer.default)({
    enabled: process.env.ANALYZE === 'true'
  })({
    distDir: 'build',
    webpack: config => {
      config.resolve && (config.resolve.alias = { ...config.resolve.alias,
        universe: paths.universe,
        multiverse: paths.multiverse
      });
      return config;
    },
    env: {
      RESULTS_PER_PAGE: process.env.RESULTS_PER_PAGE,
      IGNORE_RATE_LIMITS: process.env.IGNORE_RATE_LIMITS,
      LOCKOUT_ALL_KEYS: process.env.LOCKOUT_ALL_KEYS,
      DISALLOWED_METHODS: process.env.DISALLOWED_METHODS,
      REQUESTS_PER_CONTRIVED_ERROR: process.env.REQUESTS_PER_CONTRIVED_ERROR,
      MAX_CONTENT_LENGTH_BYTES: process.env.MAX_CONTENT_LENGTH_BYTES
    },
    experimental: {
      optionalCatchAll: true,

      async rewrites() {
        return [];
      }

    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9uZXh0LmNvbmZpZy50cyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwicG9wdWxhdGVFbnYiLCJwYXRocyIsInVuaXZlcnNlIiwiX19kaXJuYW1lIiwibXVsdGl2ZXJzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJlbmFibGVkIiwicHJvY2VzcyIsImVudiIsIkFOQUxZWkUiLCJkaXN0RGlyIiwid2VicGFjayIsImNvbmZpZyIsInJlc29sdmUiLCJhbGlhcyIsIlJFU1VMVFNfUEVSX1BBR0UiLCJJR05PUkVfUkFURV9MSU1JVFMiLCJMT0NLT1VUX0FMTF9LRVlTIiwiRElTQUxMT1dFRF9NRVRIT0RTIiwiUkVRVUVTVFNfUEVSX0NPTlRSSVZFRF9FUlJPUiIsIk1BWF9DT05URU5UX0xFTkdUSF9CWVRFUyIsImV4cGVyaW1lbnRhbCIsIm9wdGlvbmFsQ2F0Y2hBbGwiLCJyZXdyaXRlcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQU9BQSxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkMsV0FBM0I7O0FBRUEsTUFBTUMsS0FBSyxHQUFHO0FBQ1ZDLEVBQUFBLFFBQVEsRUFBRyxHQUFFQyxTQUFVLE9BRGI7QUFFVkMsRUFBQUEsVUFBVSxFQUFHLEdBQUVELFNBQVU7QUFGZixDQUFkOztBQU1BRSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsTUFBTTtBQUNuQixTQUFPLDZCQUFtQjtBQUN0QkMsSUFBQUEsT0FBTyxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsT0FBWixLQUF3QjtBQURYLEdBQW5CLEVBRUo7QUFFQ0MsSUFBQUEsT0FBTyxFQUFFLE9BRlY7QUFPQ0MsSUFBQUEsT0FBTyxFQUFHQyxNQUFELElBQTJCO0FBSWhDQSxNQUFBQSxNQUFNLENBQUNDLE9BQVAsS0FBbUJELE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxLQUFmLEdBQXVCLEVBQ3RDLEdBQUdGLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxLQURvQjtBQUV0Q2IsUUFBQUEsUUFBUSxFQUFFRCxLQUFLLENBQUNDLFFBRnNCO0FBR3RDRSxRQUFBQSxVQUFVLEVBQUVILEtBQUssQ0FBQ0c7QUFIb0IsT0FBMUM7QUFPQSxhQUFPUyxNQUFQO0FBQ0gsS0FuQkY7QUF3QkNKLElBQUFBLEdBQUcsRUFBRTtBQUNETyxNQUFBQSxnQkFBZ0IsRUFBRVIsT0FBTyxDQUFDQyxHQUFSLENBQVlPLGdCQUQ3QjtBQUVEQyxNQUFBQSxrQkFBa0IsRUFBRVQsT0FBTyxDQUFDQyxHQUFSLENBQVlRLGtCQUYvQjtBQUdEQyxNQUFBQSxnQkFBZ0IsRUFBRVYsT0FBTyxDQUFDQyxHQUFSLENBQVlTLGdCQUg3QjtBQUlEQyxNQUFBQSxrQkFBa0IsRUFBRVgsT0FBTyxDQUFDQyxHQUFSLENBQVlVLGtCQUovQjtBQUtEQyxNQUFBQSw0QkFBNEIsRUFBRVosT0FBTyxDQUFDQyxHQUFSLENBQVlXLDRCQUx6QztBQU1EQyxNQUFBQSx3QkFBd0IsRUFBRWIsT0FBTyxDQUFDQyxHQUFSLENBQVlZO0FBTnJDLEtBeEJOO0FBbUNDQyxJQUFBQSxZQUFZLEVBQUU7QUFDVkMsTUFBQUEsZ0JBQWdCLEVBQUUsSUFEUjs7QUFFVixZQUFNQyxRQUFOLEdBQWlCO0FBQ2IsZUFBTyxFQUFQO0FBTUg7O0FBVFM7QUFuQ2YsR0FGSSxDQUFQO0FBaURILENBbEREIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdpdGhCdW5kbGVBbmFseXplciBmcm9tICdAbmV4dC9idW5kbGUtYW5hbHl6ZXInXG5cbmltcG9ydCB0eXBlIHsgQ29uZmlndXJhdGlvbiB9IGZyb20gJ3dlYnBhY2snXG5cbi8vID8gTm90IHVzaW5nIEVTNi9UUyBpbXBvcnQgc3ludGF4IGhlcmUgYmVjYXVzZSBkZXYtdXRpbHMgaGFzIHNwZWNpYWxcbi8vID8gY2lyY3Vtc3RhbmNlc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnJlc29sdmVkLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXG5yZXF1aXJlKCcuL3NyYy9kZXYtdXRpbHMnKS5wb3B1bGF0ZUVudigpO1xuXG5jb25zdCBwYXRocyA9IHtcbiAgICB1bml2ZXJzZTogYCR7X19kaXJuYW1lfS9zcmMvYCxcbiAgICBtdWx0aXZlcnNlOiBgJHtfX2Rpcm5hbWV9L2xpYi9gLFxuICAgIC8vIHR5cGVzLyBpcyBwdXJwb3NlbHkgZXhjbHVkZWRcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKCkgPT4ge1xuICAgIHJldHVybiB3aXRoQnVuZGxlQW5hbHl6ZXIoe1xuICAgICAgICBlbmFibGVkOiBwcm9jZXNzLmVudi5BTkFMWVpFID09PSAndHJ1ZSdcbiAgICB9KSh7XG4gICAgICAgIC8vID8gUmVuYW1lcyB0aGUgYnVpbGQgZGlyIFwiYnVpbGRcIiBpbnN0ZWFkIG9mIFwiLm5leHRcIlxuICAgICAgICBkaXN0RGlyOiAnYnVpbGQnLFxuXG4gICAgICAgIC8vID8gV2VicGFjayBjb25maWd1cmF0aW9uXG4gICAgICAgIC8vICEgTm90ZSB0aGF0IHRoZSB3ZWJwYWNrIGNvbmZpZ3VyYXRpb24gaXMgZXhlY3V0ZWQgdHdpY2U6IG9uY2VcbiAgICAgICAgLy8gISBzZXJ2ZXItc2lkZSBhbmQgb25jZSBjbGllbnQtc2lkZSFcbiAgICAgICAgd2VicGFjazogKGNvbmZpZzogQ29uZmlndXJhdGlvbikgPT4ge1xuICAgICAgICAgICAgLy8gPyBUaGVzZSBhcmUgYWxpYXNlcyB0aGF0IGNhbiBiZSB1c2VkIGR1cmluZyBKUyBpbXBvcnQgY2FsbHNcbiAgICAgICAgICAgIC8vICEgTm90ZSB0aGF0IHlvdSBtdXN0IGFsc28gY2hhbmdlIHRoZXNlIHNhbWUgYWxpYXNlcyBpbiB0c2NvbmZpZy5qc29uXG4gICAgICAgICAgICAvLyAhIE5vdGUgdGhhdCB5b3UgbXVzdCBhbHNvIGNoYW5nZSB0aGVzZSBzYW1lIGFsaWFzZXMgaW4gcGFja2FnZS5qc29uIChqZXN0KVxuICAgICAgICAgICAgY29uZmlnLnJlc29sdmUgJiYgKGNvbmZpZy5yZXNvbHZlLmFsaWFzID0ge1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZy5yZXNvbHZlLmFsaWFzLFxuICAgICAgICAgICAgICAgIHVuaXZlcnNlOiBwYXRocy51bml2ZXJzZSxcbiAgICAgICAgICAgICAgICBtdWx0aXZlcnNlOiBwYXRocy5tdWx0aXZlcnNlLFxuICAgICAgICAgICAgICAgIC8vIHR5cGVzLyBpcyBwdXJwb3NlbHkgZXhjbHVkZWRcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8vID8gU2VsZWN0IHNvbWUgZW52aXJvbm1lbnQgdmFyaWFibGVzIGRlZmluZWQgaW4gLmVudiB0byBwdXNoIHRvIHRoZVxuICAgICAgICAvLyA/IGNsaWVudC5cbiAgICAgICAgLy8gISEgRE8gTk9UIFBVVCBBTlkgU0VDUkVUIEVOVklST05NRU5UIFZBUklBQkxFUyBIRVJFICEhXG4gICAgICAgIGVudjoge1xuICAgICAgICAgICAgUkVTVUxUU19QRVJfUEFHRTogcHJvY2Vzcy5lbnYuUkVTVUxUU19QRVJfUEFHRSxcbiAgICAgICAgICAgIElHTk9SRV9SQVRFX0xJTUlUUzogcHJvY2Vzcy5lbnYuSUdOT1JFX1JBVEVfTElNSVRTLFxuICAgICAgICAgICAgTE9DS09VVF9BTExfS0VZUzogcHJvY2Vzcy5lbnYuTE9DS09VVF9BTExfS0VZUyxcbiAgICAgICAgICAgIERJU0FMTE9XRURfTUVUSE9EUzogcHJvY2Vzcy5lbnYuRElTQUxMT1dFRF9NRVRIT0RTLFxuICAgICAgICAgICAgUkVRVUVTVFNfUEVSX0NPTlRSSVZFRF9FUlJPUjogcHJvY2Vzcy5lbnYuUkVRVUVTVFNfUEVSX0NPTlRSSVZFRF9FUlJPUixcbiAgICAgICAgICAgIE1BWF9DT05URU5UX0xFTkdUSF9CWVRFUzogcHJvY2Vzcy5lbnYuTUFYX0NPTlRFTlRfTEVOR1RIX0JZVEVTLFxuICAgICAgICB9LFxuXG4gICAgICAgIC8vIFRPRE86IG1vdmUgdGhlc2Ugb3V0IG9mIGV4cGVyaW1lbnRhbCB3aGVuIHRoZXkncmUgbm90IGV4cGVyaW1lbnRhbFxuICAgICAgICAvLyBUT0RPOiBhbnltb3JlIVxuICAgICAgICBleHBlcmltZW50YWw6IHtcbiAgICAgICAgICAgIG9wdGlvbmFsQ2F0Y2hBbGw6IHRydWUsXG4gICAgICAgICAgICBhc3luYyByZXdyaXRlcygpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBzb3VyY2U6ICcvdjEvbWV0YScsXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBkZXN0aW5hdGlvbjogJy9hcGkvdjEvbWV0YSdcbiAgICAgICAgICAgICAgICAgICAgLy8gfSxcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59O1xuIl19